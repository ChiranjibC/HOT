@model BlockChainSI.Models.ProductViewModel


@using (Html.BeginForm("Edit", "Product", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Close ×</button>
            <h4 class="modal-title" id="myModalLabel">Edit Product</h4>
        </div>
        <br />
        <div class="clearfix"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductShortCode, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ProductShortCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductShortCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDesc, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ProductDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="panel-footer text-center">
            <button type="button" id="btnClose">Close</button>
            <input type="submit" value="Save" class="btn btn-default saveBtn" />
        </div>
    </div>
}

@Scripts.Render("~/bundles/partialjs")